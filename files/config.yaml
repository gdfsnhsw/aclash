# 系统参数
mixed-port: 7891            #集成端口，http与socks
redir-port: 7892            #透明代理端口，不能更改
tproxy-port: 7893           #tproxy端口
authentication:
  - "user:pass"             #http与socks的账号跟密码，推荐使用
allow-lan: true
bind-address: '*'
mode: Script
log-level: info
ipv6: false
external-controller: 0.0.0.0:9090
external-ui: dashboard
secret: ""                  #dashboard面板的密码，同时也是tracing的密码
interface-name: ens18
routing-mark: 6666
profile:
  store-selected: true      #策略组选择缓存开关，打开后可以保存策略组选择，重启不会回复默认
  tracing: true             #tracing开关，必须打开才能对接tracing
  store-fake-ip: true       #持久化fake-ip

hosts:
  # Firebase Cloud Messaging
  'mtalk.google.com': 108.177.125.188
  # Google Dl
  'dl.google.com': 180.163.151.161
  'dl.l.google.com': 180.163.151.161

# TUN设置
tun:
  enable: true         
  stack: system
  dns-hijack:
    - 22.0.0.2:53
#    - tcp://8.8.8.8:53
#    - tcp://8.8.4.4:53
#    - 8.8.8.8:53
#    - 8.8.4.4:53

# DNS设置  
dns:
  enable: true
  ipv6: false
  listen: 127.0.0.1:5352
  default-nameserver:
    - 223.5.5.5
    - 8.8.8.8
  enhanced-mode: fake-ip
  fake-ip-range: 22.0.0.0/8
  use-hosts: true
  fake-ip-filter:
    # === LAN ===
    - '*.example'
    - '*.home.arpa'
    - '*.invalid'
    - '*.lan'
    - '*.local'
    - '*.localdomain'
    - '*.localhost'
    - '*.test'
    # === Apple Software Update Service ===
    - 'mesu.apple.com'
    - 'swscan.apple.com'
    # === ASUS Router ===
    - '*.router.asus.com'
    # === Google ===
    - 'lens.l.google.com'
    - 'stun.l.google.com'
    ## Golang
    - 'proxy.golang.org'
    # === Linksys Wireless Router ===
    - '*.linksys.com'
    - '*.linksyssmartwifi.com'
    # === Windows 10 Connnect Detection ===
    - '*.ipv6.microsoft.com'
    - '*.msftconnecttest.com'
    - '*.msftncsi.com'
    - 'msftconnecttest.com'
    - 'msftncsi.com'
    # === NTP Service ===
    - 'ntp.*.com'
    - 'ntp1.*.com'
    - 'ntp2.*.com'
    - 'ntp3.*.com'
    - 'ntp4.*.com'
    - 'ntp5.*.com'
    - 'ntp6.*.com'
    - 'ntp7.*.com'
    - 'time.*.apple.com'
    - 'time.*.com'
    - 'time.*.gov'
    - 'time1.*.com'
    - 'time2.*.com'
    - 'time3.*.com'
    - 'time4.*.com'
    - 'time5.*.com'
    - 'time6.*.com'
    - 'time7.*.com'
    - 'time.*.edu.cn'
    - '*.time.edu.cn'
    - '*.ntp.org.cn'
    - '+.pool.ntp.org'
    - 'time1.cloud.tencent.com'
    # === Game Service ===
    ## Microsoft Xbox
    - 'speedtest.cros.wr.pvp.net'
    - '*.*.xboxlive.com'
    - 'xbox.*.*.microsoft.com'
    - 'xbox.*.microsoft.com'
    - 'xnotify.xboxlive.com'
    ## Nintendo Switch
    - '*.*.*.srv.nintendo.net'
    - '+.srv.nintendo.net'
    ## Sony PlayStation
    - '*.*.stun.playstation.net'
    - '+.stun.playstation.net'
    ## STUN Server
    - '+.stun.*.*.*.*'
    - '+.stun.*.*.*'
    - '+.stun.*.*'
    - 'stun.*.*.*'
    - 'stun.*.*'
    # === Music Service ===
    ## 咪咕音乐
    - '*.music.migu.cn'
    - 'music.migu.cn'
    ## 太和音乐
    - 'music.taihe.com'
    - 'musicapi.taihe.com'
    ## 腾讯音乐
    - 'songsearch.kugou.com'
    - 'trackercdn.kugou.com'
    - '*.kuwo.cn'
    - 'api-jooxtt.sanook.com'
    - 'api.joox.com'
    - 'joox.com'
    - 'y.qq.com'
    - '*.y.qq.com'
    - 'amobile.music.tc.qq.com'
    - 'aqqmusic.tc.qq.com'
    - 'mobileoc.music.tc.qq.com'
    - 'streamoc.music.tc.qq.com'
    - 'dl.stream.qqmusic.qq.com'
    - 'isure.stream.qqmusic.qq.com'
    ## 网易云音乐
    - 'music.163.com'
    - '*.music.163.com'
    - '*.126.net'
    ## 虾米音乐
    - '*.xiami.com'
    # === Other ===
    ## QQ Quick Login
    - 'localhost.ptlogin2.qq.com'
    - 'localhost.sec.qq.com'
    ## BiliBili P2P
    - '*.mcdn.bilivideo.cn'
  nameserver:
    - 223.5.5.5

# 代理设置

# 代理集设置    
proxy-providers:
  AllProxy:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true" 
    interval: 3600
    path: ./Proxy/AllProxy.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  HK-Other:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^((?!IEPL|IPLC).)*香港((?!IEPL|IPLC).)*$"
    interval: 3600
    path: ./Proxy/HK-Other.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  HK-IEPL:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*香港)(?=.*IEPL).*$" 
    interval: 3600
    path: ./Proxy/HK-IEPL.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  HK-IPLC:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*香港)(?=.*IPLC).*$" 
    interval: 3600
    path: ./Proxy/HK-IPLC.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204


  JP-IEPL:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*日本)(?=.*IEPL).*$" 
    interval: 3600
    path: ./Proxy/JP-IEPL.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  JP-Other:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^((?!IEPL|IPV6).)*日本((?!IEPL|IPV6).)*$" 
    interval: 3600
    path: ./Proxy/JP-Other.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  TW-IEPL:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*台湾)(?=.*IEPL).*$" 
    interval: 3600
    path: ./Proxy/TW-IEPL.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  TW-IPLC:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*台湾)(?=.*IPLC).*$" 
    interval: 3600
    path: ./Proxy/TW-IPLC.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  SG-IEPL:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*新加坡)(?=.*IEPL).*$" 
    interval: 3600
    path: ./Proxy/SG-IEPL.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  UA-IEPL:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*美国)(?=.*IEPL).*$" 
    interval: 3600
    path: ./Proxy/UA-IEPL.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  KR-Other:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^((?!IEPL|IPLC).)*韩国((?!IEPL|IPLC).)*$" 
    interval: 3600
    path: ./Proxy/KR-Other.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  KR-IEPL:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*韩国)(?=.*IEPL).*$" 
    interval: 3600
    path: ./Proxy/KR-IEPL.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  KR-IPLC:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=^(?=.*韩国)(?=.*IPLC).*$" 
    interval: 3600
    path: ./Proxy/KR-IPLC.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

  GAME:
    type: http
    url: "http://127.0.0.1:25500/getprofile?name=profiles/formyairport.ini&token=password&list=true&include=游戏" 
    interval: 3600
    path: ./Proxy/GAME.yaml
    health-check:
      enable: true
      interval: 600
      url: http://cp.cloudflare.com/generate_204

proxy-groups:
  - name: 🚀 节点选择
    type: select
    proxies:
      - 🔰 全部节点
      - 🇭🇰 香港节点
      - 🇨🇳 台湾节点
      - 🇸🇬 新加坡节点
      - 🇯🇵 日本节点
      - 🇺🇲 美国节点
      - 🇰🇷 韩国节点
      - 🎮 游戏节点
      - ⭕ 直连
  - name: 📈 Speedtest
    type: select
    proxies:
      - ⭕ 直连
      - 🚀 节点选择
  - name: 💬 即时通讯
    type: select
    proxies:
      - 🚀 节点选择
      - 🇸🇬 新加坡节点
      - ⭕ 直连
  - name: 🌍 国际互联
    type: select
    proxies:
      - 🚀 节点选择
      - ⭕ 直连
  - name: 🎬 Netflix
    type: select
    proxies:
      - 🇭🇰 香港节点
      - 🇨🇳 台湾节点
      - 🇸🇬 新加坡节点
      - 🇯🇵 日本节点
      - 🇺🇲 美国节点
      - 🇰🇷 韩国节点
      - 🔰 全部节点
      - ⭕ 直连
  - name: 📽 Youtube
    type: select
    proxies:
      - 🚀 节点选择
      - 🇺🇲 美国节点
      - ⭕ 直连
  - name: 🎥 港澳台媒体
    type: select
    proxies:
      - 🚀 节点选择
      - ⭕ 直连
  - name: 🎥 国际媒体
    type: select
    proxies:
      - 🚀 节点选择
      - ⭕ 直连
  - name: 🎥 国内媒体
    type: select
    proxies:
      - ⭕ 直连
      - 🚀 节点选择
      - 🌍 国际互联
  - name: 💰数字支付
    type: select
    proxies:
      - ⭕ 直连
      - 🚀 节点选择
      - 🔰 全部节点 
  - name: 🔄 谷歌服务
    type: select
    proxies:
      - 🌍 国际互联
      - ⭕ 直连
  - name: 🖥 微软服务
    type: select
    proxies:
      - 🌍 国际互联
      - ⭕ 直连
  - name: 📱 苹果服务
    type: select
    proxies:
      - ⭕ 直连
      - 🌍 国际互联
  - name: 🎮 游戏平台
    type: select
    proxies:
      - ⭕ 直连    
      - 🎮 游戏节点
  - name: ⬛️ 漏网之鱼
    type: select
    proxies:
      - 🚀 节点选择
      - ⭕ 直连
      - 🌍 国际互联

  - name: 🇭🇰 香港节点
    type: select
    proxies:
      - 🇭🇰 HK-IEPL
      - 🇭🇰 HK-IPLC
      - 🇭🇰 HK-Other

  - name: 🇨🇳 台湾节点
    type: select
    proxies:
      - 🇨🇳 TW-IEPL
      - 🇨🇳 TW-IPLC

  - name: 🇯🇵 日本节点
    type: select
    proxies:
      - 🇯🇵 JP-IEPL
      - 🇯🇵 JP-Other

  - name: 🇸🇬 新加坡节点
    type: select
    proxies:
      - 🇸🇬 SG-IEPL

  - name: 🇺🇲 美国节点
    type: select
    proxies:
      - 🇺🇲 UA-IEPL

  - name: 🇰🇷 韩国节点
    type: select
    proxies:
      - 🇰🇷 KR-IEPL
      - 🇰🇷 KR-IPLC
      - 🇰🇷 KR-Other

  - name: 🔰 全部节点
    type: select
    use:
      - AllProxy      

  - name: 🎮 游戏节点
    type: select
    use:
      - GAME
      
  - name: 🇭🇰 HK-IEPL
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - HK-IEPL

  - name: 🇭🇰 HK-IPLC
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - HK-IPLC

  - name: 🇭🇰 HK-Other
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - HK-Other

  - name: 🇨🇳 TW-IEPL
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - TW-IEPL

  - name: 🇨🇳 TW-IPLC
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - TW-IPLC

  - name: 🇯🇵 JP-IEPL
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - JP-IEPL

  - name: 🇯🇵 JP-Other
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - JP-Other

  - name: 🇸🇬 SG-IEPL
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - SG-IEPL

  - name: 🇺🇲 UA-IEPL 
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - UA-IEPL  

  - name: 🇰🇷 KR-IEPL
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - KR-IEPL

  - name: 🇰🇷 KR-IPLC
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - KR-IPLC

  - name: 🇰🇷 KR-Other
    type: url-test
    url: http://cp.cloudflare.com/generate_204
    interval: 10800
    tolerance: 300
    use:
      - KR-Other

  - name: ⛔️ 去广告
    type: select
    proxies:
      - 🚫 拦截
      - ⭕ 直连

  - name: 🚫 拦截
    type: select
    proxies:
      - REJECT

  - name: ⭕ 直连
    type: select
    proxies:
      - DIRECT


#规则集
rule-providers:
## > 去广告
  AdBlock1:                                    #规则集文件名
    type: http                                 #规则集文件类型（HTTP=在线下载；File=本地导入）
    behavior: classical                        #行为域
    path: ./ruleset/广告拦截/AdBlock1.list     #规则集在线下载保存地址或本地文件导入地址
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%e7%bd%91%e7%bb%9c%e6%9c%8d%e5%8a%a1/Digital.list  #规则集文件下载地址
    interval: 43200                           #规则集文件自动更新间隔
  AdBlock2:
    type: http
    behavior: classical
    path: ./ruleset/广告拦截/AdBlock2.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA/AdBlock2.list
    interval: 43200
  AdBlock3:
    type: http
    behavior: classical
    path: ./ruleset/广告拦截/AdBlock3.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA/AdBlock3.list
    interval: 43200
  AdBlock4:
    type: http
    behavior: classical
    path: ./ruleset/广告拦截/AdBlock4.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA/AdBlock4.list
    interval: 43200
  AdBlock5:
    type: http
    behavior: classical
    path: ./ruleset/广告拦截/AdBlock5.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%B9%BF%E5%91%8A%E6%8B%A6%E6%88%AA/AdBlock5.list
    interval: 43200
## > 媒体服务
  # > 油管
  YouTube:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/YouTube.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/YouTube.list
    interval: 43200
  # > 奈飞
  Netflix:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/Netflix.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/Netflix.list
    interval: 43200
  # > 迪士尼+
  Disney:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/Disney.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/Disney.list
    interval: 43200
  # > HBO
  HBO:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/HBO.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/HBO.list
    interval: 43200
  # > 港澳台媒体
  HMTmedia:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/HMTmedia.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/HMTmedia.list
    interval: 43200
  # > 油管音乐   
  YoutubeMusic:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/YoutubeMusic.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/YoutubeMusic.list
    interval: 43200
  # > Apple TV
  AppleTV:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/AppleTV.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/AppleTV.list
    interval: 43200
  # > 其余国际流媒体
  GlobalMedia:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/GlobalMedia.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/GlobalMedia.list
    interval: 43200
  # > 国内流媒体
  Chinesemedia:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/Chinesemedia.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/Chinesemedia.list
    interval: 43200
  # 网易云
  wyy:
    type: http
    behavior: classical
    path: ./ruleset/媒体服务/wyy.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E5%AA%92%E4%BD%93%E6%9C%8D%E5%8A%A1/wyy.list
    interval: 43200    
## > 网络服务
  # > 苹果服务
  # 苹果API
  AppleAPI:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/AppleAPI.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/AppleAPI.list
    interval: 43200
  # 苹果CDN
  AppleCDN:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/AppleCDN.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/AppleCDN.list
    interval: 43200
  # 谷歌服务
  Google:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Google.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Google.list
    interval: 43200
  # > 谷歌CDN
  GoogleCDN:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/GoogleCDN.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/GoogleCDN.list
    interval: 43200
  # 微软服务
  Microsoft:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Microsoft.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Microsoft.list
    interval: 43200
  # > 微软CDN
  MicrosoftCDN:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/MicrosoftCDN.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/MicrosoftCDN.list
    interval: 43200
  # 数字货币
  Digital:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Digital.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Digital.list
    interval: 43200    
  # Paypal
  Paypal:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Paypal.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Paypal.list
    interval: 43200
  # Speedtest
  Speedtest:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Speedtest.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Speedtest.list
    interval: 43200
  # 即时通讯（TG,KAKAO,LINE....)
  Telegram:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Telegram.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Telegram.list
    interval: 43200
  # 游戏平台（Steam,xbox,PS,战网）
  gameline:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/gameline.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/gameline.list
    interval: 43200
  # > 回国线路 
  Domestic:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Domestic.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Domestic.list
    interval: 43200
  Lan:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Lan.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Lan.list
    interval: 43200
  # > 国际互联
  Proxy:
    type: http
    behavior: classical
    path: ./ruleset/网络服务/Proxy.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E7%BD%91%E7%BB%9C%E6%9C%8D%E5%8A%A1/Proxy.list
    interval: 43200
## > 黑白名单
  # > 黑名单
  Black:
    type: http
    behavior: classical
    path: ./ruleset/黑白名单/Black.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E9%BB%91%E7%99%BD%E5%90%8D%E5%8D%95/Black.list
    interval: 43200
  # > 白名单
  White:
    type: http
    behavior: classical
    path: ./ruleset/黑白名单/White.list
    url: http://077582580.xyz:3000/clash1step/rule-provider/raw/branch/master/%E9%BB%91%E7%99%BD%E5%90%8D%E5%8D%95/White.list
    interval: 43200

# Script匹配模式
script:
  code: |
    def main(ctx, metadata):

        ## >> 自定义变量

        # quic策略
        quic = int(metadata["dst_port"])
        if metadata["network"] == "UDP":
            if quic == 443:
                if "180.163.200." in metadata["dst_ip"]:
                    return "⭕ 直连"
                ctx.log('[Script] matched QUIC traffic use reject')
                return "REJECT"

        # 游戏主机策略               
        #SrcIP = ctx.resolve_ip(metadata["src_ip"])
        #if SrcIP == "10.10.10.14":
        #    if metadata["network"] == "udp":
        #        ctx.log('[Script] matched SrcIP')
        #        return "🎮 游戏加速"
        #    return "🌍 国际互联"
          
        # 广告拦截策略
        ad_action = {
            "Speedtest": "📈 Speedtest",
            "AdBlock1": "⛔️ 去广告",
            "AdBlock2": "⛔️ 去广告",
            "AdBlock3": "⛔️ 去广告",
            "AdBlock4": "⛔️ 去广告",
            "AdBlock5": "⛔️ 去广告"
          }

        ad_rule = ["Speedtest","AdBlock1", "AdBlock2", "AdBlock3", "AdBlock4", "AdBlock5"]
        for ad_name in ad_rule:
            if ctx.rule_providers[ad_name].match(metadata):
                ctx.log('[Script] matched %s' % ad_name)
                return ad_action[ad_name]
              
        # Plex策略
        #plex_direct = ["+.plex.direct"]
        #plex_tv = ["+.plex.tv"]
        #for hostname in plex_direct:
            #if hostname in metadata["host"]:
                #ctx.log('[Script] matched %s' % hostname)
                #return "🏘 回家"
        #for hostname in plex_tv:
            #if hostname in metadata["host"]:
                #ctx.log('[Script] matched %s' % hostname)
                #return "🌍 国际互联"
    
        # 定义规则集与策略组
        ruleset_action = {
            "Lan": "⭕ 直连",
            "White": "⭕ 直连",
            "Black": "🌍 国际互联",
            "Telegram": "💬 即时通讯",
            "YouTube": "📽 Youtube",
            "Netflix": "🎬 Netflix",
            "HMTmedia": "🎥 港澳台媒体",
            "Disney": "🎥 国际媒体",
            "YoutubeMusic": "🎥 国际媒体",
            "HBO": "🎥 国际媒体",
            "AppleTV": "🎥 国际媒体",
            "GlobalMedia": "🎥 国际媒体", 
            "gameline": "🎮 游戏平台",
            "Digital": "🌍 国际互联",
            "Paypal": "💰数字支付",
            "Proxy": "🌍 国际互联",
            "wyy": "🎥 国内媒体",
            "Chinesemedia": "🎥 国内媒体",
            "AppleAPI": "📱 苹果服务",               
            "Google": "🔄 谷歌服务",
            "GoogleCDN": "🔄 谷歌服务",
            "Microsoft": "🖥 微软服务",
            "AppleCDN": "⭕ 直连",                  
            "MicrosoftCDN": "⭕ 直连",            
            "Domestic": "⭕ 直连"
          }

        # 策略组规则
        ruleset_list = [r for r in ruleset_action]
        for rule_name in ruleset_list:
            if ctx.rule_providers[rule_name].match(metadata):
                ctx.log('[Script] matched %s' % rule_name)
                return ruleset_action[rule_name]

        ip = metadata["dst_ip"] or ctx.resolve_ip(metadata["host"])
        if ip == "":
            return "⭕ 直连"

        code = ctx.geoip(ip)
        if code == "CN":
            return "⭕ 直连"
            ctx.log('[Script] Geoip CN')

        # 漏网之鱼
        return "⬛️ 漏网之鱼"
